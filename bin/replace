#!/bin/sh

# Thrid arument is optional git grep, or else use arg 1
if [ $# -eq 2 ]; then
  git=$1;
else
  git=$3;
fi

# Files to change
files=`git grep -l -I "$git"`

# Do for loops splitting on newlines
IFS=$'\n'

for file in $files; do
  # Lock the file so we can run many of these at the same time without corruption
  # lockfile=$file.lock
  # The replace has 30 seconds before the file is auto-unlocked
  # lockfile -l 30 $lockfile

  # Escape
  # KEYWORD=$(sed 's/[]\/$*.^|[]/\\&/g' <<< $1)
  # REPLACE=$(sed 's/[\/&]/\\&/g' <<< $2)
  KEYWORD=$1
  REPLACE=$2

  # Do the replace.
  # perl -p -i -e "s{$KEYWORD}{$REPLACE}g" $file
  gsed -i "s~$KEYWORD~$REPLACE~g" $file

  git add $file

  # Unlock, someone else can modify
  # rm -f $lockfile
done

g commit -m "replace $1 $2"
