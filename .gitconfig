[core]
  excludesfile = /home/ptarjan/.gitignore

### colors are meant for a dark terminal
[color]
  ui = auto
  diff = auto
  status = auto
  branch = auto
  interactive = auto
[color "branch"]
  current = white blue bold
  local  = blue
  remote = green
[color "diff"]
  plain = white
  meta = yellow bold
  frag = magenta bold
  old = red
  new = green
  whitespace = red blink
[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[alias]
  bb = bisect bad
  bg = bisect good
  br = branch
  cp = cherry-pick
  gr = grep -i
  ca = commit --amend -a -C HEAD
  co = checkout
  st = status
  di = diff
  edit = !$EDITOR `git diff HEAD^ --name-only`
  gcbr = !git branch --no-color --no-track --merged | sed 's/[ *]*//' | grep -v master | xargs -n1 git branch -D || exit 0
  rall = "!git stash -u; git branch --no-color --no-track | sed 's/[ *]*//' | grep -v master | xargs -I % sh -c 'git co %; git r origin/master; git ra; git reset --hard; git clean -f; git clean -fdx'"
  n = "!n() { git checkout origin/master-passing-tests -b pt-$1; }; n "
  r = rebase
  rw = rebase -X ignore-space-change
  rom = rebase origin/master-passing-tests
  ri = rebase origin/master-passing-tests -i
  f = fetch
  p = "!p() { BRANCH=\"$(git symbolic-ref HEAD)\"; BRANCH=\"${BRANCH#refs/heads/}\"; git push -u origin \"$BRANCH\"; URL=\"$(git remote get-url origin)\"; URL=\"${URL/git.corp.stripe.com:/https://git.corp.stripe.com/}\"; URL=\"${URL/git@/}\"; URL=\"${URL/.git/}\"; open \"${URL}/compare/${BRANCH//\\//%2F}?expand=1\"; }; p"
  # p = "!p() { BRANCH=\"$(git symbolic-ref HEAD)\"; BRANCH=\"${BRANCH#refs/heads/}\"; git push -u origin \"$BRANCH\"; URL=\"$(git remote get-url origin)\"; URL=\"${URL//ssh:\\/\\/git@/https://}\"; URL=\"${URL//git@git.corp.stripe.com:/https://git.corp.stripe.com/}\"; URL=\"${URL//.git//}\"; open \"${URL}/compare/${BRANCH//\\//%2F}?expand=1\"; }; p"
  # p = "!p() { BRANCH=\"$(git symbolic-ref HEAD)\"; BRANCH=\"${BRANCH#refs/heads/}\"; git push -u origin \"$BRANCH\"; URL=\"$(git remote get-url origin)\"; URL=\"${URL/ext::\\/usr\\/local\\/stripe\\/bin\\/git-remote-stripe-ext.rb %S /https://git.corp.stripe.com/}\"; URL=\"${URL/.git//}\"; open \"${URL}compare/${BRANCH//\\//%2F}?expand=1\"; }; p"
  pf = !git push -f && ~/stripe/ci-notify/ci-notify
  fp = push --force-with-lease
  s = svn dcommit
  rc = !git add . && git rebase --continue
  ra = rebase --abort
  rbi = rebase -i
  vim = !vim $(git diff --name-only --diff-filter=U)
  u = branch --set-upstream-to=origin/master
  land = !git rebase -i origin/master && git push -u origin -f
  cam = "!f() { git commit -a -m \"$*\"; }; f"

[svn]
  followparent = true
  rmdir = true

[user]
  name = Paul Tarjan
  email = github@paulisageek.com
	signingkey = 64A58882
[log]
  date = relative
[blame]
  date = short
[diff]
  renames = true
  mnemonicprefix = true
[merge]
  tool = emerge
[status]
  # relativePaths = false
[rebase]
  stat = true
[gc]
  auto = 0
[credential]
  helper = osxkeychain
[push]
  default = simple

# "push.default = simple" is the default in git 2.0, but OS X still ships git
# 1.9.3 ("push.default = matching") as of 10.10.2, so... we explicitly specify
# the modern default to try and keep things sane if you accidentally use the
# OS-provided git instead of the modern one from our package manager. When a
# majority of Macs here are running OS X that ships git >= 2.0, we can likely
# remove this.
[push]
	default = simple



# http://stackoverflow.com/questions/18257622/why-is-git-core-preloadindex-default-value-false
[core]
	preloadindex = true
[web]
	browser = open
[hub]
	host = git.corp.stripe.com
[protocol]
	version = 2
